<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.9.4 on win32)" generated="20210510 18:54:59.713" rpa="false" schemaversion="2">
<suite id="s1" name="Login" source="C:\Users\Backup\Documentos\Meus repositorios\AutomacaoRobot-Parodify\rfw\parodify\login.robot">
<test id="s1-t1" name="Login com sucesso">
<kw name="New Page" library="Browser">
<arg>https://parodify.herokuapp.com/users/sign_in</arg>
<tag>BrowserControl</tag>
<tag>Setter</tag>
<doc>Open a new Page. A Page is the Playwright equivalent to a tab.
See `Browser, Context and Page` for more information about Page concept.
Returns a stable identifier for the created page.</doc>
<msg timestamp="20210510 18:55:08.064" level="INFO">Successfully initialized new page object and opened url: https://parodify.herokuapp.com/users/sign_in</msg>
<status status="PASS" starttime="20210510 18:55:03.549" endtime="20210510 18:55:08.064"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>label[for="user_email"]</arg>
<arg>contains</arg>
<arg>Email</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210510 18:55:08.067" endtime="20210510 18:55:08.144"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>input[id="user_email"]</arg>
<arg>quintilianoteste@gmail.com</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 18:55:08.145" level="INFO">Fills the text 'quintilianoteste@gmail.com' in the given field.</msg>
<status status="PASS" starttime="20210510 18:55:08.145" endtime="20210510 18:55:08.184"/>
</kw>
<kw name="Get Text" library="Browser">
<arg>label[for="user_Senha secreta"]</arg>
<arg>contains</arg>
<arg>Senha secreta</arg>
<tag>Assertion</tag>
<tag>Getter</tag>
<tag>PageContent</tag>
<doc>Returns text attribute of the element found by ``selector``.
See the `Finding elements` section for details about the selectors.</doc>
<status status="PASS" starttime="20210510 18:55:08.185" endtime="20210510 18:55:08.203"/>
</kw>
<kw name="Fill Text" library="Browser">
<arg>input[id="user_password"]</arg>
<arg>Teste1234</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Clears and fills the given ``text`` into the text field found by ``selector``.</doc>
<msg timestamp="20210510 18:55:08.204" level="INFO">Fills the text 'Teste1234' in the given field.</msg>
<status status="PASS" starttime="20210510 18:55:08.203" endtime="20210510 18:55:08.219"/>
</kw>
<kw name="Click" library="Browser">
<arg>input[type="submit"]</arg>
<tag>PageContent</tag>
<tag>Setter</tag>
<doc>Simulates mouse click on the element found by ``selector``.</doc>
<status status="PASS" starttime="20210510 18:55:08.220" endtime="20210510 18:55:08.785"/>
</kw>
<kw name="Wait For Elements State" library="Browser">
<arg>a[href$=sign_out]</arg>
<arg>visible</arg>
<arg>10</arg>
<tag>PageContent</tag>
<tag>Wait</tag>
<doc>Waits for the element found by ``selector`` to satisfy state option.</doc>
<msg timestamp="20210510 18:55:09.067" level="INFO">Wait for Element with selector: a[href$=sign_out]</msg>
<status status="PASS" starttime="20210510 18:55:08.785" endtime="20210510 18:55:09.068"/>
</kw>
<status status="PASS" starttime="20210510 18:55:03.533" endtime="20210510 18:55:09.068"/>
</test>
<doc>Testes da p√°gina login</doc>
<status status="PASS" starttime="20210510 18:54:59.713" endtime="20210510 18:55:09.101"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Login">Login</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
